---
- name: Clean previous deploy attempts
  hosts: localhost
  connection: local
  vars:
    CMD_LANG:
      LANG: en_US.UTF-8
      LC_MESSAGES: en_US.UTF-8
      LC_ALL: en_US.UTF-8
  tasks:
  - name: Check firewalld status
    systemd:
      name: firewalld
    register: firewalld_s
  - name: Enforce firewalld status
    fail:
      msg: >
        firewalld is required to be enabled and active in order
        to correctly deploy hosted-engine.
        Please check, fix accordingly and re-deploy.
    when: firewalld_s.status.SubState != 'running' or firewalld_s.status.LoadState == 'masked'
  - name: Stop libvirt service
    service:
      name: libvirtd
      state: stopped
      enabled: yes
  - name: Drop vdsm config statements
    command: sed -i '/## beginning of configuration section by vdsm-4.[0-9]\+.[0-9]\+/,/## end of configuration section by vdsm-4.[0-9]\+.[0-9]\+/d' {{ item }}
    environment: "{{ CMD_LANG }}"
    with_items:
      - /etc/libvirt/libvirtd.conf
      - /etc/libvirt/qemu.conf
      - /etc/libvirt/qemu-sanlock.conf
      - /etc/sysconfig/libvirtd
    tags: [ 'skip_ansible_lint' ]
  - name: Restore initial abrt config files
    copy:
      src: "{{ item.src }}"
      dest: "{{ item.dest }}"
    with_items:
      - { src: /usr/share/abrt/conf.d/abrt-action-save-package-data.conf, dest: /etc/abrt/abrt-action-save-package-data.conf }
      - { src: /usr/share/abrt/conf.d/abrt.conf, dest: /etc/abrt/abrt.conf }
      - { src: /usr/share/abrt/conf.d/plugins/CCpp.conf, dest: /etc/abrt/plugins/CCpp.conf }
      - { src: /usr/share/abrt/conf.d/plugins/vmcore.conf, dest: /etc/abrt/plugins/vmcore.conf }
  - name: Restart abrtd service
    service:
      name: abrtd
      state: restarted
  - name: Drop libvirt sasl2 configuration by vdsm
    command: sed -i '/## start vdsm-4.[0-9]\+.[0-9]\+ configuration/,/## end vdsm configuration/d' /etc/sasl2/libvirt.conf
    environment: "{{ CMD_LANG }}"
    tags: [ 'skip_ansible_lint' ]
  - name: Stop and disable services
    service:
      name: "{{ item }}"
      state: stopped
      enabled: no
    with_items:
      - ovirt-ha-agent
      - ovirt-ha-broker
      - vdsmd
  - name: Start libvirt
    service:
      name: libvirtd
      state: started
      enabled: yes
  - name: Check for leftover local Hosted Engine VM
    shell: virsh list | grep {{ VM_NAME }}Local | cat
    environment: "{{ CMD_LANG }}"
    changed_when: True
    register: local_vm_list
  - name: Destroy leftover local Hosted Engine VM
    command: virsh destroy {{ VM_NAME }}Local
    environment: "{{ CMD_LANG }}"
    ignore_errors: yes
    when: local_vm_list.stdout_lines|length >= 1
  - name: Check for leftover defined local Hosted Engine VM
    shell: virsh list --all | grep {{ VM_NAME }}Local | cat
    environment: "{{ CMD_LANG }}"
    changed_when: True
    register: local_vm_list_all
  - name: Undefine leftover local engine VM
    command: virsh undefine --managed-save {{ VM_NAME }}Local
    environment: "{{ CMD_LANG }}"
    when: local_vm_list_all.stdout_lines|length >= 1
    changed_when: True
  - name: Check for leftover defined Hosted Engine VM
    shell: virsh list --all | grep {{ VM_NAME }} | cat
    environment: "{{ CMD_LANG }}"
    changed_when: True
    register: target_vm_list_all
  - name: Undefine leftover engine VM
    command: virsh undefine --managed-save {{ VM_NAME }}
    environment: "{{ CMD_LANG }}"
    when: target_vm_list_all.stdout_lines|length >= 1
    changed_when: True
  - name: Remove eventually entries for the local VM from known_hosts file
    known_hosts:
      name: "{{ FQDN }}"
      state: absent
...
